
if has('win32') || has('win64')
  set runtimepath=$HOME/_vim,$VIM/vimfiles,$VIMRUNTIME,$VIM/vimfiles/after,$HOME/_vim/after

  call pathogen#infect()

  " Textile config
  let g:TextileOS="Windows"
  let g:TextileBrowser="explorer.exe"

  set guifont=DejaVu_Sans_Mono_for_Powerline:h9:cANSI
  set backupdir=$HOME/_vim/backup
  set directory=$HOME/_vim/backup
  " vundle support
  set rtp+=$HOME/_vim/bundle/Vundle.vim

  let path='~/_vim/bundle'
  call vundle#begin(path)

  " ack grep
  let g:ackprg="echo 'not supported atm'"
else

  call pathogen#infect()
  set shell=/bin/sh

  " Textile config
  let g:TextileOS="Linux"
  let g:TextileBrowser="chromium-browser"

  set guifont=DejaVu\ Sans\ Mono\ for\ Powerline\ 9

  " Directories for swp files
  set backupdir=~/.vim/backup
  set directory=~/.vim/backup

  " vundle support
  set rtp+=~/.vim/bundle/Vundle.vim

  call vundle#begin()

  " ack grep
  let g:ackprg="ack-grep -H --nocolor --nogroup --column"
endif


set nocompatible              " be iMproved, required
filetype off                  " required



" Bundles for the vim plugins
" Dont load vundle!
" Plugin 'gmarik/Vundle.vim'
Plugin 'git://github.com/kien/ctrlp.vim.git'
Plugin 'git://github.com/mileszs/ack.vim.git'
Plugin 'git://github.com/firat/vim-bufexplorer.git'
Plugin 'git://github.com/tpope/vim-rails.git'
Plugin 'git://github.com/tpope/vim-git.git'
Plugin 'git://github.com/tpope/vim-fugitive.git'
Plugin 'git://github.com/scrooloose/nerdcommenter.git'
Plugin 'git://github.com/wycats/nerdtree.git'
"Javascript
Plugin 'git://github.com/othree/yajs.vim.git'
"Display synax errors
Plugin 'git://github.com/scrooloose/syntastic.git'

Plugin 'git://github.com/tomtom/tlib_vim.git'
Plugin 'git://github.com/MarcWeber/vim-addon-mw-utils.git'
Plugin 'git://github.com/garbas/vim-snipmate.git'
Plugin 'git://github.com/ervandew/supertab.git'
Plugin 'git://github.com/bling/vim-airline.git'
Plugin 'git://github.com/timcharper/textile.vim.git'
Plugin 'git://github.com/kchmck/vim-coffee-script.git'
Plugin 'taglist.vim'
"
" Themes
Plugin 'git://github.com/sickill/vim-monokai.git'

call vundle#end()

colorscheme monokai

" Leader setting
let mapleader = ","

set number
set ruler
syntax on

" Set encoding
set encoding=utf-8

" Whitespace stuff
set wrap
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab
set list listchars=tab:\ \ ,trail:Â·

" Searching
"set hlsearch
"set incsearch
"set ignorecase
"set smartcase

" Tab completion
set wildmode=list:longest,list:full
set wildignore+=*.o,*.obj,.git,*.rbc,*.class,.svn,vendor/plugins/*,temp_gems/*,tmp/*,public/*,.bundler/*

" Status bar
set laststatus=2
let g:airline_powerline_fonts=1
let g:airline_enable_fugitive=1

" own syntax definitions

" Thorfile, Rakefile, Vagrantfile and Gemfile are Ruby
au BufRead,BufNewFile {Guardfile,Gemfile,Rakefile,Vagrantfile,Thorfile,config.ru}    set ft=ruby

" md, markdown, and mk are markdown and define buffer-local preview
au BufRead,BufNewFile *.{md,markdown,mdown,mkd,mkdn} call s:setupMarkup()

" add json syntax highlighting
au BufNewFile,BufRead *.{json,node} set ft=javascript

" arduino
au BufNewFile,BufRead *.ino set ft=cpp

au BufRead,BufNewFile *.txt call s:setupWrapping()

" Open files with <leader>f
map <leader>f :CtrlP<cr>

" Open files, limited to the directory of the current file, with <leader>gf
" This requires the %% mapping found below.
map <leader>gf :CtrlP %%<cr>

" Open files limited to a specific rails-path
map <leader>gv :CtrlP app/views<cr>
map <leader>gc :CtrlP app/controllers<cr>
map <leader>gm :CtrlP app/models<cr>
map <leader>gh :CtrlP app/helpers<cr>
map <leader>gl :CtrlP lib<cr>
map <leader>gp :CtrlP public<cr>
map <leader>gs :CtrlP spec<cr>


" CtrlP config
set wildignore+=*/tmp/*,*.so,*.swp,*.zip,*.orig,*.org,*.jpg,*.png,*.gif,*.svg,*.swf,*.mp4*,*.flv
let g:ctrlp_custom_ignore = {
      \'dir':  '\v[\/]((\.(git|hg|svn))|public|tmp|temp|log|logs)$',
      \'file': '\v\.(exe|so|dll)$'
      \}

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

" load the plugin and indent settings for the detected filetype
filetype plugin indent on

" Opens an edit command with the path of the currently edited file filled in
" Normal mode: <Leader>e
map <Leader>e :e <C-R>=expand("%:p:h") . "/" <CR>


" Inserts the path of the currently edited file into a command
" Command mode: Ctrl+P
cmap <C-P> <C-R>=expand("%:p:h") . "/" <CR>


" Use modeline overrides
set modeline
set modelines=10


" Switch between the last two files
nnoremap <leader><leader> <c-^>

" Jumping between windows
map <C-H> <C-W><C-H>
map <C-L> <C-W><C-L>
map <C-J> <C-W><C-J>
map <C-K> <C-W><C-K>

map <leader>n :bn
map <leader>p :bp
map <leader>x  "+y
map <leader>v  "+gP

" Vertical split right and split below
set splitright
set splitbelow

" Starts the current spec
map <leader>r :!rspec %<cr>


" NERDTree - toggle
" Open the current buffer in the NERDTree
map <C-N> :NERDTreeFind<cr>
map <F2> :NERDTree<CR>
let NERDTreeIgnore=['\.rbc$', '\~$']
map <Leader>n :NERDTreeToggle<CR>

" ctags tags file generation for the current directory
map <F8> :!ctags -R .<CR>




" Buff Explorere
map <leader>b :BufExplorer<CR>
map <F12> :BufExplorer<CR>
let g:bufExplorerSortBy='mru'

" configure taglist.vim
let Tlist_Use_Right_Window = 1
let Tlist_Auto_Update = 1
let Tlist_WinWidth = 50

map <leader>m :TlistToggle<CR>

" set line limit bar
" VIM 7.3+ has support for highlighting a specified column.
if exists('+colorcolumn')
    set colorcolumn=140
else
    " Emulate
    au BufWinEnter * let w:m2=matchadd('ErrorMsg', '\%85v.\+', -1)
endif

" Include user's local vim config
if filereadable(expand("~/.vimrc.local"))
  source ~/.vimrc.local
endif

if filereadable(expand("$HOME/_vimrc.local"))
  source $HOME/_vimrc.local
endif

":set guioptions-=m  "remove menu bar
:set guioptions-=T  "remove toolbar
":set guioptions-=r  "remove right-hand scroll bar
"
"
"Syntax Checker
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

" Enable syntastic syntax checking
"let g:syntastic_enable_signs=1
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
